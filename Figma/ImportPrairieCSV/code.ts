async function loadFonts() {

  await figma.loadFontAsync({ family: "Inter", style: "Regular" });
  console.log("Awaiting the fonts.");
};


var lightBaseMap = new Map();
var pathList = [];

function buildMaps() {

  var csvData = loadBaseData();
  console.log(`csvData() ${csvData}`);

  var rows = csvData.split("\n");
  console.log(`buildMap() found ${rows.length} base rows`);
  for (var i=0;i<rows.length;i++)
  {
    if (i > 0)
    {
      rows[i] = rows[i].trim();
      var cols = rows[i].split(",");
      // now apply 135 degree rotation
      var theta = -Math.PI * 135 / 180;
      //var theta = 0;
      var oldX = parseFloat(cols[1]);
      var oldZ = parseFloat(cols[2]);
      var newX = oldX * Math.cos(theta) - oldZ * Math.sin(theta);
      var newZ = oldZ * Math.cos(theta) + oldX * Math.sin(theta);
      cols[1] = newX.toString();
      cols[2] = newZ.toString(); 
      lightBaseMap.set(cols[0], cols);
    }
  }

  var pathData = loadPathData();
  console.log(`pathData() ${pathData}`);

  rows = pathData.split("\n");
  console.log(`buildMap() found ${rows.length} path rows`);
  for (var i=0;i<rows.length;i++)
  {
    if (i > 0)
    {
      // store them as strings.   typescript doesnt' like arrays of arrays
      rows[i] = rows[i].trim();
      pathList.push(rows[i]);
    }
  }
}

function loadBaseData()
{
  var baseData = `BaseId,x,z,DistFromCtr,Theta,ChannelStart,PathId,NearestTheta5,DistFromCenterOnTheta5,DistFromTheta5
  0,180.0011,0,180.0011,225,85,20,225,180.0011,0
  1,164.4392,73.21307,180.0012,201,64,20,200,179.9738,3.14146
  2,120.4443,133.7669,180.0011,177,43,20,175,179.8915,6.281981
  3,55.6234,171.1913,180.0011,153,22,20,155,179.8915,-6.281964
  4,-18.81525,179.0151,180.0011,129,1,20,130,179.9737,-3.141461
  5,-90.00054,155.8856,180.0011,105,484,20,105,180.0011,4.108555E-05
  6,-145.624,105.802,180.0011,81,274,20,80,179.9737,3.141385
  7,-176.0676,37.42434,180.0011,57,253,20,55,179.8914,6.281931
  8,-176.0676,-37.42436,180.0011,33,232,20,35,179.8914,-6.281967
  9,-145.624,-105.802,180.0011,9,211,20,10,179.9737,-3.141444
  10,-90.0005,-155.8856,180.0011,345,190,20,345,180.0011,-4.885196E-05
  11,-18.81522,-179.0151,180.0011,321,169,20,320,179.9737,3.141439
  12,55.62342,-171.1913,180.0011,297,148,20,295,179.8915,6.281921
  13,120.4443,-133.7669,180.0011,273,127,20,275,179.8914,-6.282015
  14,164.4392,-73.21306,180.0011,249,106,20,250,179.9738,-3.141501
  15,-226.6919,466.6934,518.8371,109.0923,43,7,110,518.772,-8.219428
  16,-238.4384,540.8578,591.0837,111.2096,295,6,110,590.9521,12.47787
  17,-272.528,607.7628,666.0684,110.848,85,5,110,665.9954,9.857443
  18,-325.6241,660.8586,736.726,108.7692,400,4,110,736.556,-15.82466
  19,-392.5288,694.9483,798.1428,105.5409,253,3,105,798.1073,7.53428
  20,-466.6934,706.6946,846.8884,101.5597,127,2,100,846.5748,23.05058
  21,-540.8578,694.9483,880.6136,97.10742,1,1,95,880.0179,32.38311
  22,-607.7628,660.8586,897.8361,92.39661,169,9,90,897.0509,37.54446
  23,-660.8586,607.7628,897.8361,87.60339,295,10,90,897.0509,-37.54446
  24,-694.9483,540.8577,880.6135,82.89258,421,11,85,880.0178,-32.38319
  25,-706.6946,466.6933,846.8884,78.44034,85,12,80,846.5747,-23.05062
  26,-694.9483,392.5287,798.1428,74.45914,274,13,75,798.1072,-7.534364
  27,-660.8586,325.6239,736.726,71.23077,1,14,70,736.556,15.82453
  28,-607.7628,272.5279,666.0684,69.15204,253,15,70,665.9954,-9.857552
  29,-540.8575,238.4383,591.0835,68.79041,43,16,70,590.9518,-12.4778
  30,-466.6932,226.6919,518.8369,70.90775,379,17,70,518.7718,8.219538
  31,-392.5286,238.4384,459.2729,76.27628,295,8,75,459.159,10.22945
  32,-325.6238,272.5281,424.6204,84.92737,421,20,85,424.62,-0.5382676
  33,-272.5278,325.6243,424.6205,95.07269,64,19,95,424.6201,0.5388733
  34,-238.4383,392.5292,459.2733,103.7238,253,18,105,459.1594,-10.22898
  35,706.6949,-466.6932,846.8886,258.4403,43,28,260,846.5748,-23.05104
  36,694.9483,-392.5287,798.1428,254.4591,22,28,255,798.1072,-7.53453
  37,660.8589,-325.6239,736.7261,251.2308,64,35,250,736.5562,15.82428
  38,607.763,-272.5278,666.0685,249.152,211,29,250,665.9955,-9.857824
  39,540.8579,-238.4382,591.0838,248.7904,295,34,250,590.9521,-12.47819
  40,466.6935,-226.6917,518.8371,250.9077,1,33,250,518.772,8.219155
  41,392.529,-238.4382,459.2731,256.2762,148,32,255,459.1592,10.22898
  42,325.6243,-272.5278,424.6205,264.9273,274,31,265,424.6201,-0.53892
  43,272.5281,-325.6239,424.6205,275.0726,442,30,275,424.6201,0.5383143
  44,238.4385,-392.5287,459.273,283.7237,295,21,285,459.1591,-10.22951
  45,226.692,-466.6933,518.8371,289.0923,232,22,290,518.772,-8.219688
  46,238.4385,-540.8577,591.0837,291.2096,106,23,290,590.952,12.47756
  47,272.5282,-607.7628,666.0685,290.848,400,24,290,665.9955,9.857142
  48,325.6244,-660.8586,736.7261,288.7692,64,25,290,736.5562,-15.8251
  49,392.5292,-694.9483,798.1431,285.5408,211,26,285,798.1075,7.533841
  50,466.6938,-706.6946,846.8887,281.5596,358,27,280,846.575,23.05013
  51,540.8582,-694.948,880.6136,277.1074,379,27,275,880.0179,32.38251
  52,607.7632,-660.8583,897.8361,272.3966,400,27,270,897.0508,37.54373
  53,660.8589,-607.7624,897.8361,267.6034,85,28,270,897.0507,-37.54507
  54,694.9487,-540.8572,880.6135,262.8925,64,28,265,880.0179,-32.3839
  55,-79.56326,-221.209,235.0824,334.7823,400,21,335,235.0807,-0.8929163
  56,211.9871,111.4157,239.4828,197.2746,1,30,195,239.2941,9.504779
  57,-235.7668,62.14818,243.8204,59.76727,337,8,60,243.8184,-0.990437
  58,134.1804,-208.6828,248.0986,282.2595,337,21,280,247.9057,9.781322
  59,42.73778,248.6748,252.3205,144.7517,127,19,145,252.3182,-1.093433
  60,-202.7866,-157.0484,256.489,7.243958,421,21,5,256.2923,10.04261
  61,259.7166,-21.51766,260.6065,229.7362,484,30,230,260.6037,-1.200093
  62,-179.7352,194.2895,264.6755,92.22839,463,20,90,264.4754,10.29143
  63,1.310179,-268.6953,268.6985,314.7206,379,21,315,268.6953,-1.310175
  64,183.2082,201.9595,272.6772,177.2129,22,30,175,272.4739,10.52858
  65,-275.4334,-25.52658,276.6138,39.70508,442,17,40,276.6101,-1.423821
  66,223.4426,-169.5857,280.5101,262.1973,463,30,260,280.3038,10.75496
  67,-50.89669,279.7758,284.3676,124.6895,106,19,125,284.3634,-1.540903
  68,-153.4911,-243.9119,288.1884,347.1818,316,22,345,287.9795,10.97129
  69,281.5899,77.17176,291.9732,209.674,358,31,210,291.9685,-1.661354
  70,-263.1016,135.0198,295.7242,72.1662,316,8,70,295.5128,11.17792
  71,104.0909,-280.7681,299.4422,294.6584,358,21,295,299.4369,-1.785093
  72,114.2927,280.7564,303.1287,157.1507,148,19,155,302.9152,11.37569
  73,-277.2279,-131.3832,306.7847,19.64288,358,8,20,306.7787,-1.912072
  74,296.6333,-91.45535,310.4116,242.1351,316,31,240,310.1961,11.56466
  75,-158.7704,270.9138,314.0101,104.6273,85,19,105,314.0034,-2.042305
  76,-66.67709,-310.5032,317.5816,327.1196,295,22,325,317.3643,11.74581
  77,261.7975,185.9686,321.1266,189.6118,379,31,190,321.1192,-2.175645
  78,-322.154,40.14944,324.6462,52.10403,421,17,50,324.4274,11.91904
  79,212.6913,-249.8785,328.1415,274.5963,316,21,275,328.1334,-2.312248
  80,12.08496,331.3928,331.613,137.0885,295,18,135,331.3928,12.08497
  81,-235.1824,-238.6535,335.0616,359.5803,442,21,0,335.0526,-2.454492
  82,338.0461,17.2873,338.4879,222.0725,337,31,220,338.2664,12.24115
  83,-263.567,217.7685,341.8928,84.56476,442,20,85,341.8829,-2.597232
  84,47.7133,-341.9642,345.2768,307.0569,274,22,305,345.0543,12.39302
  85,197.7189,287.1544,348.6408,169.5492,43,30,170,348.63,-2.743179
  86,-343.022,-78.92624,351.985,32.0423,463,17,30,351.7615,12.54375
  87,309.141,-175.1495,355.3105,254.5345,295,31,255,355.2987,-2.886675
  88,-110.6596,341.1172,358.6174,117.0268,274,18,115,358.3931,12.6829
  89,-150.1892,-329.2712,361.9065,339.519,337,22,340,361.8938,-3.038332
  90,336.1763,142.6208,365.1783,202.0112,232,32,200,364.9534,12.81589
  91,-347.2929,123.0063,368.433,64.50342,400,17,65,368.4192,-3.193062
  92,174.5141,-328.1534,371.6717,286.9957,253,22,285,371.4463,12.943
  93,93.78928,362.9727,374.8942,149.4879,316,18,150,374.8792,-3.350778
  94,-317.031,-206.0389,378.1014,11.9801,379,8,10,377.8757,13.06436
  95,376.0947,-62.75003,381.2935,234.4724,190,32,235,381.2774,-3.511539
  96,-30.12201,-386.4623,387.6344,319.4568,148,23,320,387.617,-3.675006
  97,285.564,266.768,390.7838,181.949,400,31,180,390.5577,13.29077
  98,-393.9009,-3.841475,393.9197,44.44122,85,16,45,393.9009,-3.84144
  99,-38.8694,398.2602,400.1525,129.4257,64,7,130,400.1323,-4.010814
  100,-242.2204,-322.397,403.25,351.9179,463,21,350,403.0241,13.49605
  101,399.4146,74.67516,406.3353,214.4102,211,32,215,406.3138,-4.183049
  102,110.959,-397.2661,412.4709,299.3946,127,23,300,412.4479,-4.358087
  103,187.9112,370.6043,415.5215,161.8868,169,19,160,415.2963,13.68127
  104,-391.7447,-147.4105,418.5615,24.37906,484,17,25,418.5369,-4.536001
  105,391.2457,-157.0521,421.5906,246.8713,169,32,245,421.3657,13.76671
  106,-123.9934,-409.2462,427.6176,331.8557,358,22,330,427.3934,13.84772
  107,370.45,219.5379,430.616,194.348,253,32,195,430.5882,-4.900342
  108,-424.3793,88.96829,433.6048,56.84021,64,16,55,433.3812,13.92392
  109,52.23281,436.4398,439.5543,141.8247,337,18,140,439.3314,13.99579
  110,-335.5712,-288.4648,442.5155,4.316864,400,8,5,442.484,-5.275886
  111,445.2455,-14.06329,445.4675,226.8091,43,33,225,445.2455,14.06337
  112,25.24543,-450.6399,451.3465,311.7936,169,23,310,451.1254,14.12649
  113,287.6411,351.6063,454.2734,174.2858,421,31,175,454.2381,-5.662344
  114,-452.4932,-65.38242,457.1924,36.77802,106,16,35,456.9723,14.18552
  115,-106.0232,450.7045,463.007,121.7625,316,6,120,462.7879,14.24035
  116,-227.6835,-406.4798,465.903,344.2547,484,21,345,465.8635,-6.060159
  117,445.2031,146.8324,468.7916,206.7469,64,33,205,468.5737,14.29106
  118,157.1918,450.7949,477.4152,154.2236,190,19,155,477.3714,-6.46901
  119,-422.9351,-227.5763,480.2761,16.71582,1,17,15,480.0607,14.38066
  120,468.352,-118.5815,483.1306,239.2081,22,33,240,483.0844,-6.677647
  121,-78.09023,-482.5425,488.8204,324.1925,379,22,325,488.7719,-6.888748
  122,385.759,304.8209,491.6561,186.6848,274,32,185,491.4436,14.45475
  123,-493.1724,36.01711,494.4859,49.177,295,15,50,494.4348,-7.102825
  124,-7.327108,500.074,500.1277,134.1606,85,7,135,500.074,-7.327086
  125,-334.2614,-375.7898,502.94,356.6528,421,8,355,502.7308,14.50618
  126,503.109,51.59178,505.7473,219.145,337,34,220,505.691,-7.546629
  127,96.43482,-502.1698,511.3455,304.1295,190,23,305,511.2864,-7.768901
  128,269.5662,437.8022,514.1368,166.6217,64,30,165,513.9309,14.55013
  129,-497.1808,-141.495,516.9232,29.11392,127,16,30,516.8614,-7.993763
  130,-193.2935,-488.3941,525.2534,336.5923,1,21,335,525.0506,14.59589
  131,474.923,230.7682,528.0207,199.0846,85,33,200,527.9533,-8.435897
  132,-508.7233,151.4328,530.7837,61.57681,274,15,60,530.5828,14.60557
  133,107.4822,525.4155,536.2964,146.5613,358,18,145,536.0974,14.61181
  134,-436.3935,-316.4363,539.0466,9.053497,22,17,10,538.9731,-8.904454
  135,538.2606,-61.7622,541.7924,231.5457,316,34,230,541.5952,14.61451
  136,-14.61404,-547.0771,547.2723,316.5302,400,22,315,547.0771,14.61404
  137,382.2215,395.4923,550.0067,179.0224,442,31,180,549.9267,-9.383904
  138,-551.7146,-33.60292,552.737,41.51462,316,15,40,552.5439,14.61008
  139,-82.51416,552.0545,558.1871,126.4991,337,6,125,557.9961,14.60268
  140,-313.5847,-465.0605,560.907,348.9913,442,8,350,560.8201,-9.874155
  141,548.0123,131.7327,563.623,211.4835,358,34,210,563.434,14.59204
  142,232.19,522.4831,571.7524,158.9602,211,19,160,571.6583,-10.3753
  143,-526.6199,-229.5008,574.4556,21.45245,148,16,20,574.271,14.56084
  144,-140.2317,-565.4172,582.5474,328.9291,22,21,330,582.4457,-10.88728
  145,487.5789,323.6848,585.2393,191.4214,295,32,190,585.0593,14.51672
  146,-580.8279,91.09625,587.9282,53.91357,22,14,55,587.8226,-11.14747
  147,40.33304,591.925,593.2975,138.898,106,7,140,593.1878,-11.41014
  148,-431.5208,-411.0716,595.9782,1.390259,43,17,0,595.8027,14.45974
  149,598.5428,11.67554,598.6567,223.8825,253,29,225,598.5428,-11.67554
  150,64.53055,-600.5489,604.0059,308.8669,421,22,310,603.8878,-11.94371
  151,359.6654,488.5669,606.6768,171.3592,85,30,170,606.5062,14.39016
  152,-597.847,-117.8195,609.3459,33.85141,337,15,35,609.2236,-12.21454
  153,-171.1199,590.3775,614.6768,118.8359,106,5,120,614.5499,-12.48815
  154,-273.7963,-553.3017,617.3388,341.3281,463,8,340,617.173,14.30834
  155,578.1196,224.0019,619.9993,203.8203,106,33,205,619.8679,-12.76442
  156,176.218,602.7363,627.968,151.297,379,18,150,627.8071,14.21388
  157,-539.3486,-326.7799,630.6203,13.78918,169,16,15,630.4796,-13.32544
  158,621.0351,-123.886,633.2711,236.2815,232,29,235,633.1127,14.1621
  159,-69.69498,-634.7523,638.567,321.2659,43,21,320,638.4112,14.10749
  160,482.1492,422.7124,641.2126,183.7581,463,31,185,641.062,-13.89699
  161,-643.7032,14.0497,643.8566,46.25037,43,14,45,643.7032,14.04976
  162,-42.62744,647.7386,649.1398,131.2348,358,6,130,648.9891,13.98893
  163,-407.7601,-508.4758,651.7791,353.7271,64,17,355,651.6182,-14.47949
  164,646.7472,99.899,654.4171,216.2193,379,34,215,654.2689,13.92516
  165,157.3162,-640.6564,659.6885,301.2037,211,23,300,659.543,13.85829
  166,318.0217,580.9763,662.3226,163.696,232,19,165,662.1511,-15.07318
  167,-629.4351,-214.422,664.9551,26.18817,358,15,25,664.8121,13.78867
  168,-215.3322,-637.4584,672.8456,333.6649,484,8,335,672.663,-15.6775
  169,591.6783,325.8551,675.4738,196.1571,316,32,195,675.3359,13.64034
  170,-658.9496,160.0172,678.1004,58.64932,295,13,60,677.912,-15.984
  171,102.5834,675.6075,683.3511,143.6338,127,7,145,683.1569,-16.29312
  172,-534.0507,-430.5248,685.975,6.125977,190,16,5,685.8427,13.47999
  173,687.2256,-43.45605,688.5983,228.6182,274,29,230,688.3979,-16.60517
  174,16.9196,-693.635,693.8414,313.6027,442,22,315,693.635,-16.91959
  175,457.7903,524.8688,696.4619,176.0949,106,30,175,696.3347,13.30845
  176,-694.7074,-78.08189,699.0816,38.58716,64,14,40,698.8692,-17.23698
  177,-139.5561,690.3544,704.3188,123.5716,127,5,125,704.0999,-17.55713
  178,-364.7738,-605.5571,706.9366,346.0638,85,17,345,706.8149,13.12492
  179,680.5307,200.8585,709.5535,208.556,127,33,210,709.3282,-17.88009
  180,257.4759,669.6044,717.4008,156.0327,400,18,155,717.2841,12.93001
  181,-644.5066,-320.9886,720.0155,18.52496,379,15,20,719.777,-18.5342
  182,694.5763,-199.392,722.6295,241.0172,85,35,240,722.5156,12.82815
  183,-138.902,-714.4799,727.8567,326.0016,64,21,325,727.7454,12.72368
  184,587.1468,434.5629,730.4699,188.4939,484,31,190,730.2175,-19.19951
  185,-729.085,76.45103,733.0823,50.98608,316,13,50,732.9737,12.61607
  186,12.50576,738.2004,738.3064,135.9706,379,6,135,738.2004,12.50579
  187,-509.6653,-537.7743,740.9183,358.4628,211,16,0,740.6516,-19.87609
  188,741.6774,52.44852,743.5295,220.955,400,34,220,743.4263,12.3925
  189,117.912,-739.4094,748.752,305.9395,232,23,305,748.6513,12.27639
  190,413.9577,627.0452,751.3632,168.4317,253,19,170,751.0817,-20.56405
  191,-731.3347,-183.3741,753.9738,30.92389,85,14,30,753.8757,12.15759
  192,-248.3175,717.4368,759.1951,115.9084,421,4,115,759.0995,12.03571
  193,-302.5568,-699.1474,761.8055,338.4006,1,8,340,761.5089,-21.26281
  194,697.7461,312.2219,764.4161,200.8928,337,32,200,764.3234,11.91112
  195,-727.8763,241.9214,767.0267,63.38507,106,12,65,766.722,-21.61671
  196,178.5668,751.319,772.2476,148.3695,148,7,150,771.9349,-21.97338
  197,-641.3392,-434.8443,774.8583,10.86172,400,15,10,774.7707,11.65341
  198,769.2198,-112.9569,777.4692,233.3539,295,29,235,777.1484,-22.33297
  199,-45.55483,-781.3641,782.6909,318.3367,463,22,320,782.361,-22.71886
  200,563.2671,547.201,785.3018,180.8289,127,30,180,785.2195,11.36041
  201,-787.5751,-23.08412,787.9133,43.32111,337,13,45,787.5751,-23.08405
  202,-92.45919,787.729,793.1366,128.3056,148,5,130,792.7899,-23.45223
  203,-465.4545,-645.4208,795.7487,350.7978,106,17,350,795.6717,11.07993
  204,781.745,162.0335,798.3609,213.29,148,33,215,798.0053,-23.82329
  205,231.2618,-769.5904,803.5865,298.2745,421,24,300,803.2223,-24.19712
  206,350.4614,726.0404,806.1996,160.7667,421,18,160,806.1274,10.78798
  207,-751.2802,-299.5947,808.8132,23.25891,106,14,25,808.4398,-24.57397
  208,758.7886,-287.497,811.4275,245.7512,106,35,245,811.3578,10.63766
  209,-221.4764,-786.0512,816.6568,330.7356,85,21,330,816.5894,10.48478
  210,696.5029,431.3817,819.2719,193.2278,1,31,195,818.88,-25.33609
  211,-807.5439,152.8801,821.8878,55.72009,127,12,55,821.8229,10.3289
  212,82.21453,823.0246,827.1207,140.7045,400,6,140,827.0582,10.17031
  213,-618.5188,-553.0823,829.7382,3.196777,232,16,5,829.3273,-26.10944
  214,832.2952,-10.05969,832.356,225.6925,421,34,225,832.2952,10.05983
  215,63.1379,-835.2103,837.5934,310.6769,253,23,310,837.5349,9.895726
  216,519.2394,660.5668,840.2132,173.1692,274,19,175,839.7842,-26.84368
  217,-831.6629,-136.7655,842.8333,35.66138,358,13,35,842.7773,9.729056
  218,-210.2505,821.6006,848.0759,120.6458,442,4,120,848.022,9.559469
  219,-401.1875,-750.1571,850.6981,343.1381,22,8,345,850.2488,-27.63985
  220,805.0217,283.0144,853.3212,205.6303,358,32,205,853.2696,9.387094
  221,-787.1843,336.1285,855.9448,68.12256,442,11,70,855.4854,-28.04263
  222,354.4774,-781.9764,858.5693,290.6147,85,25,290,858.5199,9.211795
  223,267.6525,818.5462,861.1944,153.107,169,7,155,860.7244,-28.44824
  224,-752.5665,-424.063,863.8204,15.59921,421,15,15,863.7731,9.033932
  225,843.9278,-196.2553,866.4469,238.0914,316,29,240,865.9664,-28.85676
  226,-122.4609,-863.0582,871.703,323.0759,484,22,325,871.2115,-29.26798
  227,675.317,555.341,874.3321,185.5681,148,30,185,874.2891,8.669454
  228,-875.7115,46.81902,876.9622,48.06036,148,12,50,876.4597,-29.68255
  229,-30.09977,881.7112,882.2249,133.0448,169,5,135,881.7112,-30.09973
  230,-575.1041,-672.4794,884.8578,355.537,127,17,355,884.8189,8.294015
  231,880.9312,107.7082,887.4913,218.0293,169,33,220,886.9663,-30.5201
  232,185.4065,-873.2969,892.7615,303.0137,442,24,305,892.225,-30.94341
  233,454.5288,771.454,895.3981,165.5059,442,18,165,895.3633,7.906528
  234,-858.7872,-262.5876,898.0355,27.99817,127,14,30,897.4875,-31.36961
  235,813.0001,-387.614,900.6741,250.4904,127,35,250,900.6411,7.708658
  236,-338.6413,837.4352,903.3137,112.9826,274,3,115,902.7537,-31.79907
  237,-316.8993,-848.7211,905.954,335.4749,106,21,335,905.923,7.508281
  238,809.3278,412.959,908.5959,197.9671,22,31,200,908.0242,-32.23119
  239,-878.2699,242.8941,911.2385,60.45932,463,11,60,911.2094,7.304698
  240,484.9394,-774.6062,913.8824,282.9515,232,26,285,913.2983,-32.66676
  241,166.1391,901.3431,916.527,145.4438,421,6,145,916.4995,7.098482
  242,-733.4653,-553.9918,919.1726,7.935974,253,16,10,918.5762,-33.10508
  243,917.6863,-87.20281,921.8203,230.4282,442,34,230,921.7945,6.889082
  244,-6.677433,-927.0938,927.1178,315.4127,274,23,315,927.0938,6.677444
  245,632.9708,681.041,929.7681,177.9049,295,19,180,929.1466,-33.99076
  246,-929.4129,-74.82575,932.4202,40.39713,379,13,40,932.3976,6.462718
  247,-156.6808,924.5449,937.7271,125.3816,463,4,125,937.7064,6.245048
  248,-510.4307,-789.7972,940.3824,347.8738,43,8,350,939.735,-34.88861
  249,912.4465,238.2522,943.0391,210.366,379,32,210,943.0198,6.024555
  250,-836.0965,441.9107,945.6968,72.85828,316,10,75,945.0363,-35.3424
  251,318.8994,-893.1304,948.3558,295.3505,106,25,295,948.3381,5.801125
  252,369.1871,876.4319,951.0163,157.8427,190,7,160,950.3422,-35.7989
  253,-866.6672,-397.9821,953.678,20.33496,442,15,20,953.6616,5.575078
  254,910.4216,-292.7809,956.341,242.8272,337,29,245,955.6535,-36.25874
  255,-474.8655,833.183,959.0053,105.3194,148,2,105,958.9904,5.346008
  256,-213.247,-937.7297,961.6711,327.8116,1,22,330,960.9698,-36.7215
  257,792.8616,548.9245,964.3379,190.3039,169,30,190,964.3245,5.114114
  258,-958.0684,131.1723,967.0063,52.79608,169,12,55,966.291,-37.1875
  259,619.5502,-745.9417,969.676,275.2883,421,27,275,969.6637,4.878973
  260,47.16899,971.2026,972.3474,137.7805,190,5,140,971.618,-37.65644
  261,-692.7175,-686.153,975.0198,0.2727661,148,17,0,975.0087,4.641769
  262,976.9503,38.12851,977.694,222.765,190,33,225,976.9503,-38.12851
  263,-748.1696,633.5341,980.3689,85.2572,190,9,85,980.359,4.401207
  264,124.0689,-975.1855,983.0463,307.7495,463,24,310,982.2881,-38.60373
  265,568.7887,805.0659,985.7239,170.2417,463,18,170,985.7152,4.157547
  266,-965.84,-209.9886,988.4038,32.73389,148,14,35,987.631,-39.08201
  267,856.3424,-498.9261,991.085,255.2261,148,35,255,991.0773,3.911243
  268,-295.2176,948.9049,993.7676,117.7184,295,3,120,992.9797,-39.56367
  269,-424.4349,-901.5381,996.4516,340.2106,127,21,340,996.4449,3.662273
  270,924.4303,379.0836,999.1375,202.7028,43,31,205,998.3345,-40.04827
  271,-940.2354,345.8467,1001.825,65.19504,484,11,65,1001.819,3.410112
  272,460.9181,-892.5254,1004.513,287.6873,253,26,290,1003.695,-40.53621
  273,263.7299,972.0629,1007.204,150.1795,442,6,150,1007.199,3.155127
  274,-853.3594,-540.0612,1009.895,12.67172,274,16,15,1009.062,-41.02702
  275,996.6981,-178.6868,1012.589,235.1639,463,34,235,1012.585,2.897063
  276,-615.8679,807.1605,1015.284,97.65619,22,1,100,1014.435,-41.52119
  277,-91.3491,-1013.873,1017.98,320.1484,295,23,320,1017.977,2.636633
  278,754.2134,687.7112,1020.678,182.6406,316,19,185,1019.813,-42.01829
  279,754.99,-694.859,1026.079,267.6251,106,28,270,1025.198,-42.5192
  280,-87.56574,1025.049,1028.783,130.1173,484,4,130,1028.78,2.106419
  281,-629.4931,-817.1319,1031.487,352.6096,64,8,355,1030.59,-43.0224
  282,1018.799,177.7766,1034.194,215.1018,400,32,215,1034.192,1.836926
  283,-873.5988,558.5607,1036.902,77.59399,337,10,80,1035.988,-43.52959
  284,267.5598,-1004.591,1039.612,300.0862,127,25,300,1039.61,1.564477
  285,482.5566,923.8918,1042.323,162.5785,211,7,165,1041.392,-44.03953
  286,-982.4529,-356.2118,1045.036,25.07068,463,15,25,1045.035,1.289113
  287,967.5547,-402.0192,1047.751,247.5629,358,29,250,1046.803,-44.55335
  288,-443.0304,952.4733,1050.467,110.0551,169,2,110,1050.467,1.010809
  289,-317.5291,-1004.179,1053.186,332.5474,22,22,335,1052.221,-45.06959
  290,914.8056,527.3207,1055.906,195.0396,190,30,195,1055.905,0.7296424
  291,-1033.406,229.7027,1058.627,57.5318,190,12,60,1057.645,-45.5895
  292,608.4011,-869.6631,1061.351,280.024,442,27,280,1061.351,0.4451573
  293,139.1893,1054.933,1064.076,142.5163,211,5,145,1063.076,-46.11262
  294,-817.3204,-685.6069,1066.803,5.008484,169,17,5,1066.803,0.1579996
  295,-758.2978,758.1111,1072.263,89.99295,211,9,90,1072.263,-0.1319783
  296,692.4254,825.8619,1077.729,174.9774,484,18,175,1077.729,-0.4252262
  297,-1071.147,-141.5969,1080.466,37.4696,169,14,35,1079.462,46.5571
  298,887.7222,-620.7097,1083.204,259.9619,169,35,260,1083.204,-0.7211231
  299,-235.8908,1060.014,1085.944,122.4541,316,3,120,1084.948,46.49875
  300,-543.459,-943.3391,1088.686,344.9463,148,21,345,1088.685,-1.020133
  301,1040.562,329.3156,1091.429,207.4385,64,31,205,1090.441,46.43774
  302,-992.2175,461.2197,1094.175,69.93079,1,11,70,1094.174,-1.32229
  303,421.1357,-1012.859,1096.923,292.423,274,26,290,1095.942,46.3742
  304,374.5804,1033.909,1099.672,154.9152,463,6,155,1099.67,-1.62735
  305,-977.038,-510.6212,1102.423,17.40747,295,16,15,1101.45,46.30801
  306,1068.017,-284.1711,1105.176,239.8997,484,34,240,1105.174,-1.935381
  307,-597.0531,933.2953,1107.932,102.3919,43,1,100,1106.966,46.23902
  308,-190.6567,-1094.202,1110.688,324.8841,316,23,325,1110.686,-2.245993
  309,881.8928,679.7286,1113.448,187.3764,337,19,185,1112.49,46.16739
  310,-1112.181,94.73335,1116.208,49.86859,421,13,50,1116.205,-2.560268
  311,757.9685,-823.1536,1118.972,272.3608,127,28,270,1118.022,46.09262
  312,-757.4622,-831.1198,1124.504,357.3453,85,8,355,1123.562,46.01637
  313,1122.7,101.433,1127.272,219.8375,421,32,220,1127.268,-3.197261
  314,-898.5647,685.2596,1130.044,82.32971,358,10,80,1129.11,45.93631
  315,200.1774,-1114.99,1132.816,304.8219,148,25,305,1132.811,-3.520429
  316,607.0441,959.7224,1135.592,167.3142,232,7,165,1134.666,45.85449
  317,-1098.578,-298.3453,1138.369,29.8064,484,15,30,1138.362,-3.84653
  318,1014.057,-523.3629,1141.148,252.2986,379,29,250,1140.23,45.7688
  319,-395.168,1073.506,1143.929,114.7909,190,2,115,1143.921,-4.175619
  320,-434.814,-1061.078,1146.712,337.2831,43,22,335,1145.802,45.68164
  321,1039.886,489.8808,1149.498,199.7753,211,30,200,1149.489,-4.507858
  322,-1100.351,342.0376,1152.285,62.26755,211,12,60,1151.383,45.59113
  323,581.7269,-997.8944,1155.076,284.7598,463,27,285,1155.065,-4.843239
  324,245.713,1131.495,1157.867,147.252,232,5,145,1156.972,45.49799
  325,-947.7764,-669.9653,1160.661,9.744202,190,17,10,1160.65,-5.181292
  326,1154.19,-146.5542,1163.457,232.2365,232,33,230,1162.571,45.40188
  327,-753.8763,889.843,1166.255,94.7287,232,9,95,1166.242,-5.522709
  328,-45.30371,-1168.177,1169.055,317.2209,1,24,315,1168.177,45.30373
  329,824.4692,832.7666,1171.857,179.7131,1,18,180,1171.843,-5.867165
  330,-1173.265,-57.27217,1174.662,42.20535,190,14,40,1173.792,45.20264
  331,905.9755,-752.0908,1177.469,264.6976,190,35,265,1177.452,-6.215061
  332,-160.3899,1169.329,1180.278,127.1898,337,3,125,1179.416,45.09874
  333,-673.2032,-972.8804,1183.089,349.682,169,21,350,1183.071,-6.565351
  334,1156.314,263.2539,1185.902,212.1743,85,31,210,1185.048,44.99229
  335,-1032.901,588.3566,1188.717,74.6665,22,11,75,1188.697,-6.918964
  336,365.0637,-1134.233,1191.535,297.1588,295,26,295,1190.69,44.88289
  337,498.1526,1085.508,1194.355,159.651,484,6,160,1194.332,-7.275802
  338,-1103.172,-465.019,1197.177,22.14319,316,16,20,1196.339,44.7704
  339,1130.221,-403.2408,1200.001,244.6354,1,34,245,1199.976,-7.636093
  340,-562.326,1063.289,1202.828,107.1277,64,1,105,1201.998,44.65594
  341,-304.3136,-1166.62,1205.657,329.6199,337,23,330,1205.63,-7.998948
  342,1014.809,656.2057,1208.488,192.1121,358,19,190,1207.667,44.53828
  343,-1194.343,202.1005,1211.321,54.60431,442,13,55,1211.292,-8.365467
  344,745.8961,-958.0268,1214.157,277.0966,148,28,275,1213.344,44.4181
  345,97.36396,1213.094,1216.995,139.5888,22,4,140,1216.964,-8.734726
  346,-893.3061,-830.6633,1219.835,2.080994,106,8,0,1219.03,44.29499
  347,1222.644,9.107128,1222.678,224.5732,442,32,225,1222.644,-9.107128
  348,-909.8033,821.0745,1225.522,87.06546,379,10,85,1224.726,44.16916
  349,116.503,-1222.833,1228.37,309.5577,169,25,310,1228.333,-9.48276
  350,741.8224,982.6498,1231.219,172.0499,253,7,170,1230.432,44.04064
  351,-1213.572,-223.9991,1234.071,34.54211,1,15,35,1234.032,-9.861505
  352,1048.579,-656.0997,1236.925,257.0344,400,29,255,1236.146,43.90948
  353,-330.7627,1194.845,1239.782,119.5266,211,2,120,1239.74,-10.24352
  354,-564.5106,-1107.016,1242.641,342.0188,64,22,340,1241.869,43.77552
  355,1166.711,435.9591,1245.502,204.511,232,30,205,1245.457,-10.62871
  356,-1157.438,467.7122,1248.366,67.0033,232,12,65,1247.603,43.63847
  357,538.7576,-1129.301,1251.231,289.4955,484,27,290,1251.183,-11.01724
  358,366.4065,1199.381,1254.1,151.9877,253,5,150,1253.346,43.49884
  359,-1082.819,-638.3398,1256.971,14.47995,211,17,15,1256.919,-11.40883
  360,1232.441,-261.338,1259.844,236.9722,253,33,235,1259.098,43.35629
  361,-733.9032,1027.544,1262.72,99.46442,253,9,100,1262.665,-11.80306
  362,-153.287,-1256.281,1265.598,321.9566,22,24,320,1264.86,43.21159
  363,963.8233,824.6713,1268.479,184.4489,22,18,185,1268.42,-12.20122
  364,-1270.632,43.06356,1271.362,46.9411,211,14,45,1270.632,43.06367
  365,909.8961,-892.073,1274.247,269.4333,211,35,270,1274.185,-12.60302
  366,-68.49726,1275.297,1277.135,131.9256,358,3,130,1276.414,42.91284
  367,-812.7779,-988.8665,1280.025,354.4178,190,21,355,1279.959,-13.00694
  368,1270.151,180.5429,1282.918,216.91,106,31,215,1282.205,42.75931
  369,-1060.913,726.4832,1285.813,79.40222,43,11,80,1285.743,-13.41471
  370,292.2095,-1255.145,1288.711,301.8945,316,26,300,1288.007,42.60273
  371,633.7953,1125.417,1291.611,164.3867,1,6,165,1291.537,-13.82535
  372,-1230.308,-402.6279,1294.514,26.87891,337,16,25,1293.819,42.44374
  373,1181.809,-535.3743,1297.419,249.3711,22,34,250,1297.341,-14.24038
  374,-510.9311,1195.743,1300.327,111.8634,85,1,110,1299.64,42.28191
  375,-431.9321,-1229.578,1303.238,334.3556,358,23,335,1303.155,-14.65705
  376,1151.63,616.2614,1306.151,196.8478,379,19,195,1305.472,42.11701
  377,-1268.279,324.2245,1309.066,59.34006,463,13,60,1308.979,-15.07801
  378,717.7752,-1098.225,1311.983,281.8323,169,28,280,1311.312,41.94888
  379,213.0484,1297.53,1314.905,144.3245,43,4,145,1314.813,-15.50206
  380,-1035.861,-814.6528,1317.827,6.816711,127,8,5,1317.165,41.77855
  381,1317.02,-99.2343,1320.753,229.309,463,32,230,1320.657,-15.92952
  382,-906.1021,964.941,1323.681,91.80121,400,10,90,1323.027,41.6054
  383,16.35968,-1326.511,1326.612,314.2934,190,25,315,1326.511,-16.35967
  384,885.9368,991.3662,1329.545,176.7856,274,7,175,1328.9,41.42901
  385,-1325.842,-132.8538,1332.481,39.27789,22,15,40,1332.375,-16.79342
  386,1069.729,-799.3896,1335.419,261.7701,421,29,260,1334.782,41.24977
  387,-249.3537,1314.927,1338.361,124.2623,232,2,125,1338.25,-17.23069
  388,-705.9037,-1140.526,1341.305,346.7545,85,22,345,1340.676,41.0678
  389,1293.761,364.9569,1344.251,209.2468,253,30,210,1344.135,-17.67122
  390,-1203.138,606.1422,1347.2,71.73901,253,12,70,1346.58,40.88322
  391,478.7601,-1262.418,1350.152,294.2312,1,27,295,1350.03,-18.11514
  392,500.8214,1257.01,1353.107,156.7235,274,5,155,1352.494,40.6953
  393,-1221.051,-589.8668,1356.063,19.2157,232,17,20,1355.936,-18.56236
  394,1301.649,-390.7094,1359.023,241.7079,274,33,240,1358.42,40.50432
  395,-697.392,1169.893,1361.986,104.2002,274,9,105,1361.853,-19.01262
  396,-276.6165,-1336.628,1364.951,326.6924,43,24,325,1364.355,40.31115
  397,1109.253,800.4725,1367.918,189.1846,43,18,190,1367.779,-19.46708
  398,-1361.601,159.3088,1370.889,51.67334,232,14,50,1370.304,40.03103
  399,898.2711,-1039.521,1373.861,274.169,232,35,275,1373.717,-19.92423
  400,39.83155,1376.261,1376.837,136.6578,379,3,135,1376.261,39.83161
  401,-961.1568,-989.9852,1379.816,359.1535,211,21,0,1379.666,-20.38491
  402,1380.423,80.9911,1382.797,221.6422,127,31,220,1382.229,39.62889
  403,-1074.851,874.6913,1385.781,84.138,64,11,85,1385.625,-20.84866
  404,202.2354,-1373.964,1388.768,306.6267,337,26,305,1388.208,39.42336
  405,780.7244,1152.154,1391.758,169.1224,22,6,170,1391.595,-21.31658
  406,-1356.842,-322.9664,1394.75,31.61115,358,16,30,1394.199,39.21502
  407,1221.229,-679.9191,1397.745,254.1069,43,34,255,1397.575,-21.78774
  408,-442.245,1329.097,1400.742,116.5956,106,1,115,1400.199,39.00354
  409,-572.9973,-1281.471,1403.743,339.0913,379,23,340,1403.567,-22.26111
  410,1290.854,559.1356,1406.746,201.5801,400,19,200,1406.212,38.7894
  411,-1332.339,460.7331,1409.752,64.07581,484,13,65,1409.569,-22.73938
  412,672.7132,-1242.317,1412.762,286.5645,190,28,285,1412.235,38.57185
  413,343.9504,1373.358,1415.773,149.0602,64,4,150,1415.583,-23.22059
  414,-1183.776,-782.0698,1418.787,11.54895,148,8,10,1418.269,38.35176
  415,1404.126,-223.5145,1421.804,234.0447,484,32,235,1421.607,-23.70543
  416,1068.514,-46.66578,1069.533,227.5007,211,33,230,1068.515,-46.63924
  417,-1023.376,2.372963,1023.379,45.13287,400,13,45,1023.376,2.373053
  418,47.16854,-1073.96,1074.996,312.4852,484,24,310,1073.984,46.61277
  419,-2.877152,1121.733,1121.737,134.853,1,4,135,1121.733,-2.877103`;
  return baseData;
}

function loadPathData()
{
  var pathData = `PathId,Host,Universe,ChannelStart,Fixture0,Fixture1,DistanceFt
  1,192.168.0.220,1,1,21,276,11.24786
  1,192.168.0.220,1,1,276,307,10.62752
  1,192.168.0.220,1,1,307,340,11.21269
  1,192.168.0.220,1,1,340,374,11.83959
  1,192.168.0.220,1,1,374,408,12.50032
  2,192.168.0.220,2,127,20,255,10.56267
  2,192.168.0.220,2,127,255,288,10.28876
  2,192.168.0.220,2,127,288,319,10.84609
  2,192.168.0.220,2,127,319,353,11.44769
  2,192.168.0.220,2,127,353,387,12.08966
  3,192.168.0.220,3,253,19,236,12.69469
  3,192.168.0.220,3,253,236,268,9.969085
  3,192.168.0.220,3,253,268,299,10.49632
  3,192.168.0.220,3,253,299,332,11.07117
  3,192.168.0.220,3,253,332,366,11.68847
  3,192.168.0.220,3,253,366,400,12.34034
  4,192.168.0.220,4,400,18,192,7.983219
  4,192.168.0.220,4,400,192,218,9.241807
  4,192.168.0.220,4,400,218,247,9.670699
  4,192.168.0.220,4,400,247,280,10.16462
  4,192.168.0.220,4,400,280,419,10.71082
  4,192.168.0.220,4,400,419,345,11.30238
  4,192.168.0.220,4,400,345,379,11.9351
  4,192.168.0.220,4,400,379,413,12.60653
  5,192.168.0.221,-1,85,17,153,8.573965
  5,192.168.0.221,-1,85,153,177,8.736752
  5,192.168.0.221,-1,85,177,202,9.013849
  5,192.168.0.221,-1,85,202,229,9.399079
  5,192.168.0.221,-1,85,229,260,9.852787
  5,192.168.0.221,-1,85,260,293,10.36772
  5,192.168.0.221,-1,85,293,324,10.93192
  5,192.168.0.221,-1,85,324,358,11.5396
  5,192.168.0.221,-1,85,358,392,12.18735
  6,192.168.0.221,-1,295,16,115,13.3493
  6,192.168.0.221,-1,295,115,139,8.670065
  6,192.168.0.221,-1,295,139,162,8.638732
  6,192.168.0.221,-1,295,162,186,8.828222
  6,192.168.0.221,-1,295,186,212,9.149389
  6,192.168.0.221,-1,295,212,241,9.56597
  6,192.168.0.221,-1,295,241,273,10.04339
  6,192.168.0.221,-1,295,273,304,10.578
  6,192.168.0.221,-1,295,304,337,11.15936
  6,192.168.0.221,-1,295,337,371,11.78265
  6,192.168.0.221,-1,295,371,405,12.44517
  7,192.168.0.221,-1,43,15,99,16.65841
  7,192.168.0.221,-1,43,99,124,8.882318
  7,192.168.0.221,-1,43,124,147,8.623324
  7,192.168.0.221,-1,43,147,171,8.691411
  7,192.168.0.221,-1,43,171,196,8.938725
  7,192.168.0.221,-1,43,196,223,9.300437
  7,192.168.0.221,-1,43,223,252,9.739676
  7,192.168.0.221,-1,43,252,285,10.24189
  7,192.168.0.221,-1,43,285,316,10.7951
  7,192.168.0.221,-1,43,316,350,11.39288
  7,192.168.0.221,-1,43,350,384,12.03147
  8,192.168.0.220,-1,295,31,70,13.80588
  8,192.168.0.220,-1,295,70,57,6.485802
  8,192.168.0.220,-1,295,57,73,16.49356
  8,192.168.0.220,-1,295,73,94,7.050288
  8,192.168.0.220,-1,295,94,110,7.040443
  8,192.168.0.220,-1,295,110,125,7.277896
  8,192.168.0.220,-1,295,125,140,7.636163
  8,192.168.0.220,-1,295,140,154,8.066399
  8,192.168.0.220,-1,295,154,168,8.539286
  8,192.168.0.220,-1,295,168,193,8.902891
  8,192.168.0.220,-1,295,193,219,9.253376
  8,192.168.0.220,-1,295,219,248,9.684392
  8,192.168.0.220,-1,295,248,281,10.17999
  8,192.168.0.220,-1,295,281,312,10.7276
  8,192.168.0.220,-1,295,312,346,11.32039
  8,192.168.0.220,-1,295,346,380,11.95429
  8,192.168.0.220,-1,295,380,414,12.6217
  9,192.168.0.222,-1,169,22,263,11.92007
  9,192.168.0.222,-1,169,263,295,10.41567
  9,192.168.0.222,-1,169,295,327,10.98382
  9,192.168.0.222,-1,169,327,361,11.59518
  9,192.168.0.222,-1,169,361,395,12.24637
  10,192.168.0.222,-1,295,23,250,20.10652
  10,192.168.0.222,-1,295,250,283,10.21084
  10,192.168.0.222,-1,295,283,314,10.76127
  10,192.168.0.222,-1,295,314,348,11.35658
  10,192.168.0.222,-1,295,348,382,11.99284
  11,192.168.0.222,-1,421,24,221,18.71227
  11,192.168.0.222,-1,421,221,239,10.86189
  11,192.168.0.222,-1,421,239,271,10.01351
  11,192.168.0.222,-1,421,271,302,10.54523
  11,192.168.0.222,-1,421,302,335,11.12396
  11,192.168.0.222,-1,421,335,369,11.74486
  11,192.168.0.222,-1,421,369,403,12.40517
  12,192.168.0.222,-1,85,25,195,18.81397
  12,192.168.0.222,-1,85,195,211,9.95659
  12,192.168.0.222,-1,85,211,228,10.50653
  12,192.168.0.222,-1,85,228,258,9.824187
  12,192.168.0.222,-1,85,258,291,10.33602
  12,192.168.0.222,-1,85,291,322,10.89746
  12,192.168.0.222,-1,85,322,356,11.50275
  12,192.168.0.222,-1,85,356,390,12.14818
  13,192.168.0.222,-1,274,26,170,19.60681
  13,192.168.0.222,-1,274,170,185,9.091459
  13,192.168.0.222,-1,274,185,201,9.620696
  13,192.168.0.222,-1,274,201,217,10.16092
  13,192.168.0.222,-1,274,217,246,9.643502
  13,192.168.0.222,-1,274,246,417,10.13406
  13,192.168.0.222,-1,274,417,310,10.67734
  13,192.168.0.222,-1,274,310,343,11.26642
  13,192.168.0.222,-1,274,343,377,11.89677
  13,192.168.0.222,-1,274,377,411,12.56601
  14,192.168.0.223,-1,1,27,146,20.65055
  14,192.168.0.223,-1,1,146,161,8.287152
  14,192.168.0.223,-1,1,161,176,8.775616
  14,192.168.0.223,-1,1,176,191,9.290076
  14,192.168.0.223,-1,1,191,207,9.826633
  14,192.168.0.223,-1,1,207,234,9.474846
  14,192.168.0.223,-1,1,234,266,9.939732
  14,192.168.0.223,-1,1,266,297,10.4639
  14,192.168.0.223,-1,1,297,330,11.03614
  14,192.168.0.223,-1,1,330,364,11.65105
  14,192.168.0.223,-1,1,364,398,12.3007
  15,192.168.0.223,-1,253,28,132,13.03649
  15,192.168.0.223,-1,253,132,123,9.704885
  15,192.168.0.223,-1,253,123,138,7.580186
  15,192.168.0.223,-1,253,138,152,8.002007
  15,192.168.0.223,-1,253,152,167,8.469651
  15,192.168.0.223,-1,253,167,181,8.968918
  15,192.168.0.223,-1,253,181,197,9.491642
  15,192.168.0.223,-1,253,197,224,9.31238
  15,192.168.0.223,-1,253,224,253,9.753622
  15,192.168.0.223,-1,253,253,286,10.25747
  15,192.168.0.223,-1,253,286,317,10.81201
  15,192.168.0.223,-1,253,317,351,11.41116
  15,192.168.0.223,-1,253,351,385,12.05082
  16,192.168.0.223,-1,43,29,108,15.79127
  16,192.168.0.223,-1,43,108,98,8.140508
  16,192.168.0.223,-1,43,98,114,7.081043
  16,192.168.0.223,-1,43,114,129,7.355131
  16,192.168.0.223,-1,43,129,143,7.733261
  16,192.168.0.223,-1,43,143,157,8.175687
  16,192.168.0.223,-1,43,157,172,8.656668
  16,192.168.0.223,-1,43,172,187,9.165569
  16,192.168.0.223,-1,43,187,213,9.160376
  16,192.168.0.223,-1,43,213,242,9.579176
  16,192.168.0.223,-1,43,242,274,10.05839
  16,192.168.0.223,-1,43,274,305,10.5945
  16,192.168.0.223,-1,43,305,338,11.17704
  16,192.168.0.223,-1,43,338,372,11.80166
  16,192.168.0.223,-1,43,372,406,12.46012
  17,192.168.0.223,-1,379,30,91,13.17803
  17,192.168.0.223,-1,379,91,78,7.215538
  17,192.168.0.223,-1,379,78,65,6.716557
  17,192.168.0.223,-1,379,65,86,7.178157
  17,192.168.0.223,-1,379,86,104,7.00396
  17,192.168.0.223,-1,379,104,119,7.168312
  17,192.168.0.223,-1,379,119,134,7.489448
  17,192.168.0.223,-1,379,134,148,7.896711
  17,192.168.0.223,-1,379,148,163,8.355034
  17,192.168.0.223,-1,379,163,178,8.847705
  17,192.168.0.223,-1,379,178,203,9.023776
  17,192.168.0.223,-1,379,203,230,9.411566
  17,192.168.0.223,-1,379,230,261,9.867133
  17,192.168.0.223,-1,379,261,294,10.38367
  17,192.168.0.223,-1,379,294,325,10.94919
  17,192.168.0.223,-1,379,325,359,11.55807
  17,192.168.0.223,-1,379,359,393,12.20701
  18,192.168.0.223,-1,253,34,88,11.4778
  18,192.168.0.223,-1,253,88,80,10.26076
  18,192.168.0.223,-1,253,80,93,7.299584
  18,192.168.0.223,-1,253,93,109,7.033817
  18,192.168.0.223,-1,253,109,133,8.727811
  18,192.168.0.223,-1,253,133,156,8.621318
  18,192.168.0.223,-1,253,156,180,8.769494
  18,192.168.0.223,-1,253,180,206,9.064321
  18,192.168.0.223,-1,253,206,233,9.462065
  18,192.168.0.223,-1,253,233,265,9.925093
  18,192.168.0.223,-1,253,265,296,10.44778
  18,192.168.0.223,-1,253,296,329,11.01868
  18,192.168.0.223,-1,253,329,363,11.63241
  18,192.168.0.223,-1,253,363,397,12.28579
  19,192.168.0.224,-1,64,33,75,10.51915
  19,192.168.0.224,-1,64,75,67,9.019757
  19,192.168.0.224,-1,64,67,59,8.222039
  19,192.168.0.224,-1,64,59,72,6.53481
  19,192.168.0.224,-1,64,72,103,9.6797
  19,192.168.0.224,-1,64,103,118,7.156102
  19,192.168.0.224,-1,64,118,142,8.645774
  19,192.168.0.224,-1,64,142,166,8.655655
  19,192.168.0.224,-1,64,166,190,8.868657
  19,192.168.0.224,-1,64,190,216,9.207461
  19,192.168.0.224,-1,64,216,245,9.629955
  19,192.168.0.224,-1,64,245,278,10.11883
  19,192.168.0.224,-1,64,278,309,10.66071
  19,192.168.0.224,-1,64,309,342,11.24847
  19,192.168.0.224,-1,64,342,376,11.87771
  19,192.168.0.224,-1,64,376,410,12.54064
  20,192.168.0.225,-1,421,32,83,6.89689
  20,192.168.0.225,-1,421,83,62,7.254798
  20,192.168.0.225,-1,421,62,5,8.133931
  20,192.168.0.225,-1,421,5,4,6.237384
  20,192.168.0.225,-1,421,4,3,6.237387
  20,192.168.0.225,-1,421,3,2,6.237391
  20,192.168.0.225,-1,421,2,1,6.237384
  20,192.168.0.225,-1,421,1,0,6.237386
  20,192.168.0.225,-1,421,0,14,6.237386
  20,192.168.0.225,-1,421,14,13,6.237384
  20,192.168.0.225,-1,421,13,12,6.23739
  20,192.168.0.225,-1,421,12,11,6.237386
  20,192.168.0.225,-1,421,11,10,6.237383
  20,192.168.0.225,-1,421,10,9,6.237393
  20,192.168.0.225,-1,421,9,8,6.237382
  20,192.168.0.225,-1,421,8,7,6.237388
  20,192.168.0.225,-1,421,7,6,6.237381
  21,192.168.0.225,-1,295,44,79,12.07959
  21,192.168.0.225,-1,295,79,58,7.388542
  21,192.168.0.225,-1,295,58,71,6.50943
  21,192.168.0.225,-1,295,71,63,8.623938
  21,192.168.0.225,-1,295,63,55,7.815336
  21,192.168.0.225,-1,295,55,60,11.5772
  21,192.168.0.225,-1,295,60,81,7.316683
  21,192.168.0.225,-1,295,81,100,7.003223
  21,192.168.0.225,-1,295,100,116,7.110842
  21,192.168.0.225,-1,295,116,130,7.403368
  21,192.168.0.225,-1,295,130,144,7.794274
  21,192.168.0.225,-1,295,144,159,8.242324
  21,192.168.0.225,-1,295,159,183,8.797925
  21,192.168.0.225,-1,295,183,209,9.106226
  21,192.168.0.225,-1,295,209,237,9.513528
  21,192.168.0.225,-1,295,237,269,9.983849
  21,192.168.0.225,-1,295,269,300,10.51257
  21,192.168.0.225,-1,295,300,333,11.08873
  21,192.168.0.225,-1,295,333,367,11.70726
  21,192.168.0.225,-1,295,367,401,12.36525
  22,192.168.0.225,-1,232,45,92,12.33666
  22,192.168.0.225,-1,232,92,84,10.62922
  22,192.168.0.225,-1,232,84,76,9.886489
  22,192.168.0.225,-1,232,76,68,9.117698
  22,192.168.0.225,-1,232,68,89,7.11859
  22,192.168.0.225,-1,232,89,106,7.012997
  22,192.168.0.225,-1,232,106,121,7.206978
  22,192.168.0.225,-1,232,121,136,7.543364
  22,192.168.0.225,-1,232,136,150,7.959569
  22,192.168.0.225,-1,232,150,174,8.712945
  22,192.168.0.225,-1,232,174,199,8.975056
  22,192.168.0.225,-1,232,199,226,9.34986
  22,192.168.0.225,-1,232,226,256,9.795808
  22,192.168.0.225,-1,232,256,289,10.30447
  22,192.168.0.225,-1,232,289,320,10.86318
  22,192.168.0.225,-1,232,320,354,11.46597
  22,192.168.0.225,-1,232,354,388,12.10914
  23,192.168.0.225,-1,106,46,102,16.00121
  23,192.168.0.225,-1,106,102,96,11.79116
  23,192.168.0.225,-1,106,96,112,7.063358
  23,192.168.0.225,-1,106,112,127,7.323505
  23,192.168.0.225,-1,106,127,165,12.6065
  23,192.168.0.225,-1,106,165,189,8.860355
  23,192.168.0.225,-1,106,189,215,9.196168
  23,192.168.0.225,-1,106,215,244,9.616511
  23,192.168.0.225,-1,106,244,277,10.10363
  23,192.168.0.225,-1,106,277,308,10.64409
  23,192.168.0.225,-1,106,308,341,11.23059
  23,192.168.0.225,-1,106,341,375,11.8586
  23,192.168.0.225,-1,106,375,409,12.52559
  24,192.168.0.225,-1,400,47,205,13.91718
  24,192.168.0.225,-1,400,205,232,9.449327
  24,192.168.0.225,-1,400,232,264,9.910571
  24,192.168.0.225,-1,400,264,418,10.43169
  24,192.168.0.225,-1,400,418,328,11.00124
  24,192.168.0.225,-1,400,328,362,11.61376
  24,192.168.0.225,-1,400,362,396,12.26608
  25,192.168.0.225,-1,64,48,222,10.37558
  25,192.168.0.225,-1,64,222,251,9.725752
  25,192.168.0.225,-1,64,251,284,10.22637
  25,192.168.0.225,-1,64,284,315,10.7781
  25,192.168.0.225,-1,64,315,349,11.37479
  25,192.168.0.225,-1,64,349,383,12.01208
  26,192.168.0.225,-1,211,49,240,10.16701
  26,192.168.0.225,-1,211,240,272,10.02841
  26,192.168.0.225,-1,211,272,303,10.56161
  26,192.168.0.225,-1,211,303,336,11.14167
  26,192.168.0.225,-1,211,336,370,11.76372
  26,192.168.0.225,-1,211,370,404,12.42009
  27,192.168.0.225,-1,358,50,51,6.257404
  27,192.168.0.225,-1,358,51,52,6.25743
  27,192.168.0.225,-1,358,52,259,7.158001
  27,192.168.0.225,-1,358,259,292,10.35189
  27,192.168.0.225,-1,358,292,323,10.91468
  27,192.168.0.225,-1,358,323,357,11.5211
  27,192.168.0.225,-1,358,357,391,12.16776
  28,192.168.0.225,-1,22,36,35,6.257417
  28,192.168.0.225,-1,22,35,54,6.257369
  28,192.168.0.225,-1,22,54,53,6.257441
  28,192.168.0.225,-1,22,53,279,10.68698
  28,192.168.0.225,-1,22,279,311,10.69409
  28,192.168.0.225,-1,22,311,344,11.28436
  28,192.168.0.225,-1,22,344,378,11.91589
  28,192.168.0.225,-1,22,378,412,12.58116
  29,192.168.0.225,-1,211,38,158,12.43609
  29,192.168.0.225,-1,211,158,149,11.45123
  29,192.168.0.225,-1,211,149,173,8.701901
  29,192.168.0.225,-1,211,173,198,8.957232
  29,192.168.0.225,-1,211,198,225,9.324355
  29,192.168.0.225,-1,211,225,254,9.767651
  29,192.168.0.225,-1,211,254,287,10.27308
  29,192.168.0.225,-1,211,287,318,10.82907
  29,192.168.0.225,-1,211,318,352,11.42938
  29,192.168.0.225,-1,211,352,386,12.07021
  30,192.168.0.225,-1,442,43,66,13.63138
  30,192.168.0.225,-1,442,66,61,12.70387
  30,192.168.0.225,-1,442,61,56,11.77018
  30,192.168.0.225,-1,442,56,64,7.91728
  30,192.168.0.225,-1,442,64,85,7.201818
  30,192.168.0.225,-1,442,85,128,13.90862
  30,192.168.0.225,-1,442,128,151,8.618015
  30,192.168.0.225,-1,442,151,175,8.718719
  30,192.168.0.225,-1,442,175,200,8.984586
  30,192.168.0.225,-1,442,200,227,9.362088
  30,192.168.0.225,-1,442,227,257,9.80997
  30,192.168.0.225,-1,442,257,290,10.32024
  30,192.168.0.225,-1,442,290,321,10.8803
  30,192.168.0.225,-1,442,321,355,11.48435
  30,192.168.0.225,-1,442,355,389,12.12862
  31,192.168.0.225,-1,274,42,87,8.23029
  31,192.168.0.225,-1,274,87,74,7.051963
  31,192.168.0.225,-1,274,74,82,9.696783
  31,192.168.0.225,-1,274,82,69,6.858412
  31,192.168.0.225,-1,274,69,77,9.215202
  31,192.168.0.225,-1,274,77,97,7.01852
  31,192.168.0.225,-1,274,97,113,7.071969
  31,192.168.0.225,-1,274,113,137,8.688847
  31,192.168.0.225,-1,274,137,160,8.630722
  31,192.168.0.225,-1,274,160,184,8.805348
  31,192.168.0.225,-1,274,184,210,9.116858
  31,192.168.0.225,-1,274,210,238,9.526587
  31,192.168.0.225,-1,274,238,270,9.998652
  31,192.168.0.225,-1,274,270,301,10.52886
  31,192.168.0.225,-1,274,301,334,11.10637
  31,192.168.0.225,-1,274,334,368,11.72602
  31,192.168.0.225,-1,274,368,402,12.38013
  32,192.168.0.230,1,148,41,105,6.783012
  32,192.168.0.230,1,148,105,95,7.959285
  32,192.168.0.230,1,148,95,101,11.61581
  32,192.168.0.230,1,148,101,90,7.735062
  32,192.168.0.230,1,148,90,107,7.0173
  32,192.168.0.230,1,148,107,122,7.220505
  32,192.168.0.230,1,148,122,145,8.629383
  32,192.168.0.230,1,148,145,169,8.676829
  32,192.168.0.230,1,148,169,194,8.911693
  32,192.168.0.230,1,148,194,220,9.265051
  32,192.168.0.230,1,148,220,249,9.698119
  32,192.168.0.230,1,148,249,282,10.1954
  32,192.168.0.230,1,148,282,313,10.74437
  32,192.168.0.230,1,148,313,347,11.33852
  32,192.168.0.230,1,148,347,381,11.97352
  32,192.168.0.230,1,148,381,415,12.64719
  33,192.168.0.230,2,1,40,120,9.010243
  33,192.168.0.230,2,1,120,111,8.92015
  33,192.168.0.230,2,1,111,117,13.40797
  33,192.168.0.230,2,1,117,131,7.420171
  33,192.168.0.230,2,1,131,155,8.618177
  33,192.168.0.230,2,1,155,179,8.749459
  33,192.168.0.230,2,1,179,204,9.033773
  33,192.168.0.230,2,1,204,231,9.424085
  33,192.168.0.230,2,1,231,262,9.881582
  33,192.168.0.230,2,1,262,416,10.39965
  33,192.168.0.230,2,1,416,326,10.96651
  33,192.168.0.230,2,1,326,360,11.57659
  33,192.168.0.230,2,1,360,394,12.22666
  34,192.168.0.230,3,295,39,135,14.72458
  34,192.168.0.230,3,295,135,126,9.889931
  34,192.168.0.230,3,295,126,141,7.65527
  34,192.168.0.230,3,295,141,164,8.644988
  34,192.168.0.230,3,295,164,188,8.844051
  34,192.168.0.230,3,295,188,214,9.173804
  34,192.168.0.230,3,295,214,243,9.589743
  34,192.168.0.230,3,295,243,275,10.0734
  34,192.168.0.230,3,295,275,306,10.61097
  34,192.168.0.230,3,295,306,339,11.19487
  34,192.168.0.230,3,295,339,373,11.82058
  34,192.168.0.230,3,295,373,407,12.48531
  35,192.168.0.230,4,64,37,182,10.88811
  35,192.168.0.230,4,64,182,208,9.085125
  35,192.168.0.230,4,64,208,235,9.487668
  35,192.168.0.230,4,64,235,267,9.954388
  35,192.168.0.230,4,64,267,298,10.48011
  35,192.168.0.230,4,64,298,331,11.05359
  35,192.168.0.230,4,64,331,365,11.66975
  35,192.168.0.230,4,64,365,399,12.32549`;
  return pathData;
}


async function importCSV() {

  const nodes: SceneNode[] = [];
  const lines: SceneNode[] = [];
  const pageNode = figma.currentPage;

  // make sure we are on the right page
  if (pageNode.name != "Assets")
  {
    console.error(`need to be on the Assets page to run`);
    return;
  }

  // import the CSV data
  buildMaps();
  
  console.log(`finding node 'Wiring Plan'`);
  const planNode = pageNode.findOne(node => node.type === "FRAME" && node.name === "Wiring Plan") as FrameNode;
  if (planNode == null)
  {
    console.log(`planNode is null !`);
    return;
  }

  console.log(`finding node 'Map'`);
  const mapNode = planNode.findOne(node => node.type === "FRAME" && node.name === "Map") as FrameNode;

  if (mapNode == null)
  {
    console.log(`mapNode is null !`);
    return;
  }
//  else
//  {
//    console.log(`mapNode node.type = '${mapNode.type}'`);
//    return;
//  }

  // first get rid of old lights & wiring path data
  console.log(`finding and deleting node 'Lights'`);
  const lights = pageNode.findOne(node => node.type === "GROUP" && node.name === "Lights") as FrameNode;
  if (lights != null)
  {
    lights.remove();
  }

  console.log(`finding and deleting node 'Wiring Paths'`);
  const wiringPaths = pageNode.findOne(node => node.type === "GROUP" && node.name === "Wiring Paths") as FrameNode;
  if (wiringPaths != null)
  {
    wiringPaths.remove();
  }

  // now we draw the wiring path lines
  var testLoopMax = 500;
  for (let path of pathList) {

    var cols = path.split(",");
    console.log(`path = ${path} cols.length = ${cols.length}`);

    const line = figma.createLine();
    var startNodeId = cols[4];
    var endNodeId = cols[5];

    console.log(`startNodeId = ${startNodeId} endNodeId = ${endNodeId}`);

    console.log(`(lightBaseMap.get(startNodeId) = ${lightBaseMap.get(startNodeId)} lightBaseMap.get(endNodeId) = ${lightBaseMap.get(endNodeId)}`);

    var startX = parseFloat(lightBaseMap.get(startNodeId)[1])-452;
    var startZ = -parseFloat(lightBaseMap.get(startNodeId)[2])-379;
    var endX = parseFloat(lightBaseMap.get(endNodeId)[1])-452;
    var endZ = -parseFloat(lightBaseMap.get(endNodeId)[2])-379;

    console.log(`processing path from node ${cols[4]} to ${cols[5]}`);

    var length = Math.sqrt((endX - startX)*(endX - startX) + (endZ - startZ)*(endZ - startZ));
    var rot = -Math.atan2(endZ - startZ, endX - startX) * 180 / Math.PI;

    line.resize(length,0);
    line.x = startX;
    line.y = startZ;
    line.rotation = rot;

    // add the length of the line
    var lineLength = figma.createText();
    lineLength.fontSize = 8;
    lineLength.characters = parseFloat(cols[6]).toFixed(2) + " (ft)";
    lineLength.x = ((startX + endX) / 2) + 10;
    lineLength.y = (startZ + endZ) / 2;

    // for now just put node in the main page; group later
    pageNode.appendChild(lineLength);
    lines.push(lineLength);

    // for now just put node in the main page; group later
    pageNode.appendChild(line);
    lines.push(line);

    testLoopMax -=1;
    if (testLoopMax == 0)
      break;
  }

  console.log(`done processing paths`);

  // and now we group the new lines together
  figma.currentPage.selection = lines;
  figma.viewport.scrollAndZoomIntoView(lines);
  console.log(`figma.group()`);
  const newLines = figma.group(lines,mapNode);
  newLines.name = "Wiring Paths";

  // now add new lights and group together
  console.log(`finding node 'Light Base'`);
  const base = pageNode.findOne(node => node.type === "COMPONENT" && node.name === "Light Base") as ComponentNode;
  var testLoopMax = 500;
  for (let key of lightBaseMap.keys()) {
    const light = base.createInstance();
    console.log(`processing lightbase ${key}`);
    console.log(`    ${lightBaseMap.get(key)}`);
    console.log(`    ${lightBaseMap.get(key)[1]}`);
    console.log(`    ${lightBaseMap.get(key)[2]}`);

    light.x = parseFloat(lightBaseMap.get(key)[1]) -452;
    light.y = -parseFloat(lightBaseMap.get(key)[2]) -379;  // need to invert y because in unity, y axis runs bottom-to-top, and in figma, it runs top-to-bottom
    const id = light.findOne(node => node.type === "TEXT" && node.name === "#ID") as TextNode;
    id.characters = key;

    const univ = light.findOne(node => node.type === "TEXT" && node.name === "#Universe") as TextNode;
    univ.characters = `P${lightBaseMap.get(key)[6]}`;

    var chanStart = parseInt(lightBaseMap.get(key)[5]);
    var chanEnd = chanStart+20;

    const range = light.findOne(node => node.type === "TEXT" && node.name === "#Range") as TextNode;
    range.characters = `${chanStart}-${chanEnd}`;


    const angle = light.findOne(node => node.type === "TEXT" && node.name === "#A") as TextNode;
    angle.characters = `A=${parseFloat(lightBaseMap.get(key)[7]).toFixed(1)}°`;

    const radius1 = light.findOne(node => node.type === "TEXT" && node.name === "#R1") as TextNode;
    var R1I = Math.round(lightBaseMap.get(key)[8]);
    var R1F = Math.floor(R1I/12);
    R1I = R1I - (R1F*12);
    radius1.characters = `R1=${R1F}'-${R1I}"`;

    const radius2 = light.findOne(node => node.type === "TEXT" && node.name === "#R2") as TextNode;
    var R2I = Math.round(lightBaseMap.get(key)[9]);
    // var R2F = Math.trunc(R2I/12);
    // R2I = Math.abs(R2I - (R2F*12));
    // radius2.characters = `R2=${R2F}'-${R2I}"`;
    radius2.characters = `R2=${R2I}"`;

    light.name = `Light ${key}`;

    // for now just put light in the main page; group later
    pageNode.appendChild(light);
    nodes.push(light);

    testLoopMax -=1;
    if (testLoopMax == 0)
      break;
  }

  console.log(`done adding lights`);

  // and now we group the new lights together
  figma.currentPage.selection = nodes;
  figma.viewport.scrollAndZoomIntoView(nodes);
  const newLights = figma.group(nodes,mapNode);
  newLights.name = "Lights";

}


async function exportTags() 
{

  const pageNode = figma.currentPage;

  // make sure we are on the right page
  if (pageNode.name != "Landmarks")
  {
    console.error(`need to be on the Landmarks page to run`);
    return;
  }

  var tagNode = pageNode.findOne(node => node.type === "FRAME" && node.name === "Arms / direction A") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);
  tagNode = tagNode.findOne(node => node.type === "FRAME" && node.name === "Map") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);
  tagNode = tagNode.findOne(node => node.type === "GROUP" && node.name === "Lights") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);

  for (let child of tagNode.children)
  {
    if (child.name.startsWith("CWArm"))
    {
      //console.log(`found child '${child.name}'`);
      // find the child lights
      var childGroup = child as FrameNode;
      var csvLightNumbers = "";
      for (let light of childGroup.children)
      {
        if (csvLightNumbers != "")
        {
          csvLightNumbers += ",";
        }
        csvLightNumbers += light.name.substring(6);
      }
      //var groupNum = child.name.substring(6);
      console.log(`${child.name},${csvLightNumbers}`);
    }
  }

  var tagNode = pageNode.findOne(node => node.type === "FRAME" && node.name === "Portal Placemen / Aisles") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);
  tagNode = tagNode.findOne(node => node.type === "FRAME" && node.name === "Map") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);
  tagNode = tagNode.findOne(node => node.type === "GROUP" && node.name === "Lights") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);

  for (let child of tagNode.children)
  {
    if (child.name.startsWith("Portal"))
    {
      //console.log(`found child '${child.name}'`);
      // find the child lights
      var childGroup = child as FrameNode;
      var csvLightNumbers = "";
      for (let light of childGroup.children)
      {
        if (csvLightNumbers != "")
        {
          csvLightNumbers += ",";
        }
        csvLightNumbers += light.name.substring(6);
      }
      //var groupNum = child.name.substring(6);
      console.log(`${child.name},${csvLightNumbers}`);
    }
  }

  var tagNode = pageNode.findOne(node => node.type === "FRAME" && node.name === "Arms / direction B") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);
  tagNode = tagNode.findOne(node => node.type === "FRAME" && node.name === "Map") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);
  tagNode = tagNode.findOne(node => node.type === "GROUP" && node.name === "Lights") as FrameNode;
  console.log(`found tagNode '${tagNode.name}'`);

  console.log('exporting direction B!');
  for (let child of tagNode.children)
  {
    if (child.name.startsWith("Arm"))
    {
      //console.log(`found child '${child.name}'`);
      // find the child lights
      var childGroup = child as FrameNode;
      if (childGroup != null)
      {
        var csvLightNumbers = "";
        for (let light of childGroup.children)
        {
          if (csvLightNumbers != "")
          {
            csvLightNumbers += ",";
          }
          csvLightNumbers += light.name.substring(6);
        }
        //var groupNum = child.name.substring(6);
        console.log(`${child.name},${csvLightNumbers}`);
      }
    }
  }
  console.log('finished exporting direction B!');

}

async function numberRadials() {

  const pageNode = figma.currentPage;
  const nodes: SceneNode[] = [];

  // make sure we are on the right page
  if (pageNode.name != "Assets")
  {
    console.error(`need to be on the Assets page to run`);
    return;
  }
  
  console.log(`finding node 'Map'`);
  const mapNode = pageNode.findOne(node => node.type === "FRAME" && node.name === "Map") as FrameNode;
  if (mapNode == null)
  {
    console.log(`mapNode is null !`);
    return;
  }

  // first get rid of old numbers
  console.log(`finding and deleting node 'Numbers'`);
  const numbers = pageNode.findOne(node => node.type === "GROUP" && node.name === "Numbers") as GroupNode;
  if (numbers != null)
  {
    numbers.remove();
  }

  // now we draw the numbers
  for (let i=0; i < 360; i+=5) {
    const text = figma.createText();
    var x = 1560 * Math.cos((i-90) * Math.PI / 180);
    var y = 1560 * Math.sin((i-90) * Math.PI / 180);
    text.x = x;
    text.y = y;
    text.fontSize = 20;
    text.characters = i.toString() + "°";
    
    // for now just put node in the main page; group later
    pageNode.appendChild(text);
    nodes.push(text);
  }

  console.log(`done drawing numbers`);

  // and now we group the new lines together
  figma.currentPage.selection = nodes;
  figma.viewport.scrollAndZoomIntoView(nodes);
  console.log(`figma.group()`);
  const numberGroup = figma.group(nodes,mapNode);
  numberGroup.name = "Numbers";
}


// This file holds the main code for the plugins. It has access to the *document*.
// You can access browser APIs such as the network by creating a UI which contains
// a full browser environment (see documentation).

(async() => {
  await loadFonts();

  console.log(`figma.command = ${figma.command}`)
  console.log(`figma.currentPage.name = '${figma.currentPage.name}'`);

  if (figma.command == "import")
  {    
    await importCSV();
  }
  else if (figma.command == "export")
  {
    await exportTags();
  }
  else if (figma.command == "radials")
  {
    await numberRadials();
  }

  // Make sure to close the plugin when you're done. Otherwise the plugin will
  // keep running, which shows the cancel button at the bottom of the screen.
  figma.closePlugin();

})();


